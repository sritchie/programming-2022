#+STARTUP: indent
#+OPTIONS: num:nil toc:nil reveal_history:t
#+REVEAL_HEAD_PREAMBLE: <meta name="description" content="Presentation.">
#+REVEAL_POSTAMBLE: <p>Created by Sam Ritchie.</p>
#+REVEAL_ROOT: ./reveal.js
#+REVEAL_REVEAL_JS_VERSION: 4
#+REVEAL_INIT_OPTIONS: slideNumber:false
#+REVEAL_TRANS: none
#+REVEAL_THEME: solarized
#+REVEAL_PLUGINS: (notes highlight search zoom math)
#+REVEAL_HIGHLIGHT_CSS: ./reveal.js/plugin/highlight/zenburn.css
#+REVEAL_DEFAULT_FRAG_STYLE: roll-in
#+REVEAL_TITLE_SLIDE:

#+begin_comment
Wow, so this actually comes from https://gitlab.com/oer/org-re-reveal, not the
=org-reveal= you find by searching. Insane!

It looks like [[https://gitlab.com/oer/emacs-reveal-howto][emacs-reveal]] is a thing too, and I should get a peek in down the
road. But not now...

See [[https://oer.gitlab.io/org-re-reveal/Readme.html][example prezzy]].

- =C-F= for searching slides.
- =o= shows overview
- =s= shows presenter notes.

- [ ] download mathjax, set it up locally for airport

Look into 'multiplexing' down the road.
#+end_comment

#+Title: Lisp as Renaissance Workshop
#+Author: Sam Ritchie
#+Email: sritchie09@gmail.com

# This is the header slide, remember.
* Lisp as Renaissance Workshop
#+begin_notes
Hello!
#+end_notes

A Lispy Tour through Mathematical Physics

#+ATTR_HTML: :class r-stretch
[[./images/clojure.svg]]

* Big Block with Title

#+REVEAL: split

math:

#+ATTR_REVEAL: :code_attribs data-line-numbers="1|3-6|7"
#+begin_src clojure
(defn angles->rect [l1 l2]
  (fn [[t [theta1 theta2]]]
    (let [x1    (* l1 (sin theta1))
          y1    (- (* l1 (cos theta1)))
          x2 (+ x1 (* l2 (sin (+ theta1 theta2))))
          y2 (- y1 (* l2 (cos (+ theta1 theta2))))]
      (up x1 y1 x2 y2))))
#+end_src

#+REVEAL: split

More code:

#+ATTR_REVEAL: :code_attribs data-line-numbers="3-5|8-10|13-15"
#+begin_src html
<table>
  <tr>
    <td>Apples</td>
    <td>$1</td>
    <td>7</td>
  </tr>
  <tr>
    <td>Oranges</td>
    <td>$2</td>
    <td>18</td>
  </tr>
  <tr>
    <td>Kiwi</td>
    <td>$3</td>
    <td>1</td>
  </tr>
</table>
</code></pre>
#+end_src

#+REVEAL: split

And some $\pi$ math:

$$
f(x) = f(a)+\frac{Df(a)}{1!}(x-a)+ \\
\frac{D^2f(a)}{2!}(x-a)^{2}+\frac{D^3f(a)}{3!}(x-a)^{3}+\cdots
$$

** A List

#+begin_comment
grow shrink roll-in fade-out highlight-red highlight-green highlight-blue appear

optionally set =:frag_idx (1 2 3)=
#+end_comment

#+ATTR_REVEAL: :frag (t fade-out highlight-red) :frag_idx (2 3 1)
- one
- two
- three

#+REVEAL: split

Another example:
#+ATTR_REVEAL: :frag (t)
- one
- two
- three

** Fragmented Contents


Make contents fragmented (show up one-by-one) by setting option =ATTR_REVEAL=
with property ":frag frag-style", as illustrated below.

#+ATTR_REVEAL: :frag zoom-in
Paragraphs can be fragmented.

#+ATTR_REVEAL: :frag zoom-in
- Lists can
- be fragmented.

#+ATTR_REVEAL: :frag zoom-in
Pictures, tables and many other HTML elements can be fragmented.

** Single Colored Background
   :PROPERTIES:
   :reveal_background: #123456
   :END:

* Background Image with Tex!

This slide has no image.

The next slide demos a full screen image.

# Totally great.
#+REVEAL: split data-background="./images/clojure.svg"


* Image Embedding

# This will get us an image that stretches correctly, but can't be exported.
# Down the road figure out how to do this right.
#+REVEAL_HTML: <img class="r-stretch" src="./images/clojure.svg">

* Requirements and Installation
#+BEGIN_NOTES
Your note! Yes, this works!!!
#+END_NOTES

  - Reveal.js.
  - Org-mode.
  - ox-reveal.el.
  - htmlize.el (optional, for syntax highlighting).
  - And, of course, emacs!

* Remaining Stuff from Roam

Now we start migrating stuff in.
